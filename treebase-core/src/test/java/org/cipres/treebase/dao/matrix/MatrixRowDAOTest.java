package org.cipres.treebase.dao.matrix;

import java.util.Collection;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import org.cipres.treebase.dao.AbstractDAOTest;
import org.cipres.treebase.domain.matrix.MatrixRow;
import org.cipres.treebase.domain.matrix.MatrixRowHome;

/**
 * The class <code>MatrixRowDAOTest</code> contains tests for the class {@link
 * <code>MatrixRowDAO</code>}
 * 
 * @pattern JUnit Test Case
 * 
 * @generatedBy CodePro at 3/23/07 10:29 AM
 * 
 * @author Jin Ruan
 * 
 * @version $Revision$
 */
public class MatrixRowDAOTest extends AbstractDAOTest {
	private static final Logger LOGGER = LogManager.getLogger(MatrixRowDAOTest.class);

	private MatrixRowHome mMatrixRowHome;

	/**
	 * @return the matrixRowHome
	 */
	private MatrixRowHome getMatrixRowHome() {
		return mMatrixRowHome;
	}

	/**
	 * @param pMatrixRowHome the matrixRowHome to set
	 */
	public void setMatrixRowHome(MatrixRowHome pMatrixRowHome) {
		mMatrixRowHome = pMatrixRowHome;
	}

	/**
	 * Run the void findByLabel(String) method test
	 * TODO: No actual tests 20090225 MJD
	 */
	public void testFindByLabel() {

		String testName = "FindByLabel";
		if (LOGGER.isInfoEnabled()) {
			LOGGER.info("\n\t\tRunning Test: " + testName);
		}

		// TODO find a valid taxonLabel
		String taxonLabel = "test";
		MatrixRowHome matrixRowHome = getMatrixRowHome();

		Collection<MatrixRow> rows = matrixRowHome.findByLabel(taxonLabel);

		// assertTrue(rows.size() > 0);

		if (LOGGER.isInfoEnabled()) {
			LOGGER.info(testName + " - end "); //$NON-NLS-1$
		}
	}

	// TODO findByTaxonLabel 20090225 MJD
	
	/**
	 * Run the void deleteRows(Collection<MatrixRow>) method test
	 */
	public void testDeleteRows() {
		// fail("Newly generated method - fix or disable");
		// TODO add test code here
		Collection<MatrixRow> pRows = null;
		getMatrixRowHome().deleteRows(pRows);
		// assertTrue(false);
	}

	/**
	 * Run the void deleteRows(Collection<MatrixRow>) method test
	 */
	public void testDeleteRowsEmpty() {
		String testName = "delete empty rows";
		if (LOGGER.isInfoEnabled()) {
			LOGGER.info("\n\t\tRunning Test: " + testName);
		}

		Collection<MatrixRow> pRows = null;
		getMatrixRowHome().deleteRows(pRows);
		// assertTrue(false);

		if (LOGGER.isInfoEnabled()) {
			LOGGER.info(testName + " - end "); //$NON-NLS-1$
		}
	}
}

/*
 * $CPS$ This comment was generated by CodePro. Do not edit it. patternId =
 * com.instantiations.assist.eclipse.pattern.testCasePattern strategyId =
 * com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase additionalTestNames =
 * assertTrue = false callTestMethod = true createMain = false createSetUp = false createTearDown =
 * false createTestFixture = true createTestStubs = false methods = deleteRows(QCollection<QMatrixRow;>;),findByTaxonLabel(QString;)
 * package = org.cipres.treebase.dao.matrix package.sourceFolder = treebase-core/src/test/java
 * superclassType = junit.framework.TestCase testCase = MatrixRowDAOTest testClassType =
 * org.cipres.treebase.dao.matrix.MatrixRowDAO
 */