#!/usr/bin/perl

use strict;
use CIPRES::TreeBase::DBIUtil;
use Getopt::Std;

my %opt;
getopts('m:s:r:', \%opt) or usage();
unless ($opt{m} || $opt{r} || $opt{s} || $opt{b}) {
    $opt{s} = shift() or usage();
}

my $dbh = CIPRES::TreeBase::DBIutil->dbh
  or die "Couldn't connect to database: " . DBI->errstr;

if ($opt{r}) {
    show_matrixrow($opt{r});
} elsif ($opt{m}) {
    show_matrix($opt{m});
} elsif ($opt{s}) {
    my @matrix_ids = do {
	my $q = "SELECT matrix_id from matrix where study_id = ?";
	@{$dbh->selectcol_arrayref($q, {}, $opt{s})};
    };
   
    for my $matrix_id (@matrix_ids) {
	show_matrix($matrix_id);
    }

} else {
    my @matrix_ids = do {
	my $q = "SELECT matrix_id from sub_matrix where submission_id = ?";
	@{$dbh->selectcol_arrayref($q, {}, $opt{b})};
    };

    for my $matrix_id (@matrix_ids) {
	show_matrix($matrix_id);
    }

}

sub show_matrix {
    my $mid = shift;
    {
	my $q = "select title, nexusfilename from matrix where matrix_id = ?";
	my $sth = $dbh->prepare_cached($q);
	$sth->execute($mid);
	my ($title, $nexus) = $sth->fetchrow;
	print "MATRIX $mid '$title' ($nexus)\n";
	$sth->finish;
    }

    my @rows =  do {
	my $q = "SELECT matrixrow_id from matrixrow where matrix_id = ?";
	@{$dbh->selectcol_arrayref($q, {}, $mid)};
    };
    show_matrixrow($_) for @rows;
}

my %abbr;
my %abbr_r;

sub show_matrixrow {
    my $row = shift;
    my $q = "SELECT s.description from matrixelement e, discretecharstate s where e.matrixrow_id = ? and s.discretecharstate_id = e.discretecharstate_id order by element_order";
    my $sth = $dbh->prepare_cached($q);
    $sth->execute($row);
    my $val;
    $sth->bind_col(1, \$val);
    print "$row> ";
    while ($sth->fetch) {
	if (not defined $val) { print '-'; next }
	if (defined $abbr{$val}) { print $abbr{$val}; next; }
	my $abbr = substr($val, 0, 1);
	while (exists $abbr_r{$abbr}) { $abbr++; $abbr = "A" if length($abbr) > 1  }
	$abbr{$val} = $abbr;
	$abbr_r{$abbr} = $val;
	print "$abbr";
    }
    print "\n";
}



sub usage {
    print "$0 study-id\n";
    exit 1;
}

